/*
 * GPS_Time_Week.h
 *
 *  Created on: 2013/06/07
 *      Author: bun
 */

#ifndef GPS_TIME_WEEK_H_
#define GPS_TIME_WEEK_H_

#include <time.h>
#include <stdint.h>
#include <stdio.h>


class GPS_Time_Week {
private:
  int week;
  double second;

  static const long int Seconds_in_Week = 604800L;
  static const int Time_t_Base_Year = 1970;
  static const int GPS_Week_Origin = 315964800L;


public:
  GPS_Time_Week();
  GPS_Time_Week(int w, double sec);
  ~GPS_Time_Week();

  struct tm ToDate();
  static long double GetJulianDay(tm tmbuf);

  int GetWeek()
  {
    return week;
  };
  double GetSecond()
  {
    return second;
  };
//  void Set(int w, double sec);
//  void Set(time_t t);
  void Set(tm tmbuf);

};

static long double GPS_Time_Week::GetJulianDay(tm tmbuf)
{
  uint64_t y, m, a, b;

  if (tmbuf.tm_mon<2)
    {
      y = tmbuf.tm_year + 1899;
      m = tmbuf.tm_mon + 13;
    }
  else
    {
      y = tmbuf.tm_year + 1900;
      m = tmbuf.tm_mon + 1;
    }

  a = (uint64_t)(y / 100);
  b = (uint64_t)(2 - a +(uint64_t)(a / 4));

  return (double)(floor(365.25 * y) + floor(30.6001 * (m + 1)) + tmbuf.tm_mday + 1720994.5 + b);

}


#endif /* GPS_TIME_WEEK_H_ */
